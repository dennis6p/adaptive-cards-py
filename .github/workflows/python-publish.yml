# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  pull_request:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Update version in pyproject.toml
        id: update_version
        run: |
          echo "Updating version in pyproject.toml"
          TAG_NAME=${GITHUB_REF##*/}  # Get the tag name from GITHUB_REF
          # Optionally, you may want to sanitize TAG_NAME (remove 'v' prefix, etc.)
          sed -i "s/version = \".*\"/version = \"${TAG_NAME}\"/" pyproject.toml

      - name: Build package
        run: uv build

      - name: Publish package
        run: uv publish --publish-url https://upload.pypi.org/legacy/ --username __token__ --password ${{ secrets.PYPI_TEST_API_TOKEN }}
        if: github.event_name == 'pull_request'

      - name: Publish package
        run: uv publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
        if: github.event_name == 'release'
